// Generated by gencpp from file gpt_server/GPTGenerate.msg
// DO NOT EDIT!


#ifndef GPT_SERVER_MESSAGE_GPTGENERATE_H
#define GPT_SERVER_MESSAGE_GPTGENERATE_H

#include <ros/service_traits.h>


#include <gpt_server/GPTGenerateRequest.h>
#include <gpt_server/GPTGenerateResponse.h>


namespace gpt_server
{

struct GPTGenerate
{

typedef GPTGenerateRequest Request;
typedef GPTGenerateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GPTGenerate
} // namespace gpt_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gpt_server::GPTGenerate > {
  static const char* value()
  {
    return "6a3016ec943c4b1e9b46a9b5305c9cf6";
  }

  static const char* value(const ::gpt_server::GPTGenerate&) { return value(); }
};

template<>
struct DataType< ::gpt_server::GPTGenerate > {
  static const char* value()
  {
    return "gpt_server/GPTGenerate";
  }

  static const char* value(const ::gpt_server::GPTGenerate&) { return value(); }
};


// service_traits::MD5Sum< ::gpt_server::GPTGenerateRequest> should match
// service_traits::MD5Sum< ::gpt_server::GPTGenerate >
template<>
struct MD5Sum< ::gpt_server::GPTGenerateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gpt_server::GPTGenerate >::value();
  }
  static const char* value(const ::gpt_server::GPTGenerateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gpt_server::GPTGenerateRequest> should match
// service_traits::DataType< ::gpt_server::GPTGenerate >
template<>
struct DataType< ::gpt_server::GPTGenerateRequest>
{
  static const char* value()
  {
    return DataType< ::gpt_server::GPTGenerate >::value();
  }
  static const char* value(const ::gpt_server::GPTGenerateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gpt_server::GPTGenerateResponse> should match
// service_traits::MD5Sum< ::gpt_server::GPTGenerate >
template<>
struct MD5Sum< ::gpt_server::GPTGenerateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gpt_server::GPTGenerate >::value();
  }
  static const char* value(const ::gpt_server::GPTGenerateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gpt_server::GPTGenerateResponse> should match
// service_traits::DataType< ::gpt_server::GPTGenerate >
template<>
struct DataType< ::gpt_server::GPTGenerateResponse>
{
  static const char* value()
  {
    return DataType< ::gpt_server::GPTGenerate >::value();
  }
  static const char* value(const ::gpt_server::GPTGenerateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GPT_SERVER_MESSAGE_GPTGENERATE_H
