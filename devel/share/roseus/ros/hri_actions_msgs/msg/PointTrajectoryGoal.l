;; Auto-generated. Do not edit!


(when (boundp 'hri_actions_msgs::PointTrajectoryGoal)
  (if (not (find-package "HRI_ACTIONS_MSGS"))
    (make-package "HRI_ACTIONS_MSGS"))
  (shadow 'PointTrajectoryGoal (find-package "HRI_ACTIONS_MSGS")))
(unless (find-package "HRI_ACTIONS_MSGS::POINTTRAJECTORYGOAL")
  (make-package "HRI_ACTIONS_MSGS::POINTTRAJECTORYGOAL"))

(in-package "ROS")
;;//! \htmlinclude PointTrajectoryGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass hri_actions_msgs::PointTrajectoryGoal
  :super ros::object
  :slots (_header _targets _times_from_start ))

(defmethod hri_actions_msgs::PointTrajectoryGoal
  (:init
   (&key
    ((:header __header) (instance std_msgs::Header :init))
    ((:targets __targets) ())
    ((:times_from_start __times_from_start) (let (r) (dotimes (i 0) (push (instance ros::time :init) r)) r))
    )
   (send-super :init)
   (setq _header __header)
   (setq _targets __targets)
   (setq _times_from_start __times_from_start)
   self)
  (:header
   (&rest __header)
   (if (keywordp (car __header))
       (send* _header __header)
     (progn
       (if __header (setq _header (car __header)))
       _header)))
  (:targets
   (&rest __targets)
   (if (keywordp (car __targets))
       (send* _targets __targets)
     (progn
       (if __targets (setq _targets (car __targets)))
       _targets)))
  (:times_from_start
   (&optional __times_from_start)
   (if __times_from_start (setq _times_from_start __times_from_start)) _times_from_start)
  (:serialization-length
   ()
   (+
    ;; std_msgs/Header _header
    (send _header :serialization-length)
    ;; geometry_msgs/Point[] _targets
    (apply #'+ (send-all _targets :serialization-length)) 4
    ;; duration[] _times_from_start
    (* 8    (length _times_from_start)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; std_msgs/Header _header
       (send _header :serialize s)
     ;; geometry_msgs/Point[] _targets
     (write-long (length _targets) s)
     (dolist (elem _targets)
       (send elem :serialize s)
       )
     ;; duration[] _times_from_start
     (write-long (length _times_from_start) s)
     (dotimes (i (length _times_from_start))
       (write-long (send (elt _times_from_start i) :sec) s) (write-long (send (elt _times_from_start i) :nsec) s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; std_msgs/Header _header
     (send _header :deserialize buf ptr-) (incf ptr- (send _header :serialization-length))
   ;; geometry_msgs/Point[] _targets
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _targets (let (r) (dotimes (i n) (push (instance geometry_msgs::Point :init) r)) r))
     (dolist (elem- _targets)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; duration[] _times_from_start
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _times_from_start (let (r) (dotimes (i n) (push (instance ros::time :init) r)) r))
     (dolist (elem- _times_from_start)
     (send elem- :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send elem- :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get hri_actions_msgs::PointTrajectoryGoal :md5sum-) "9d607cbc90aa8b6b7183b03defd85e14")
(setf (get hri_actions_msgs::PointTrajectoryGoal :datatype-) "hri_actions_msgs/PointTrajectoryGoal")
(setf (get hri_actions_msgs::PointTrajectoryGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# the header's frame applies to ALL points in the trajectory
std_msgs/Header header
geometry_msgs/Point[] targets
duration[] times_from_start

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :hri_actions_msgs/PointTrajectoryGoal "9d607cbc90aa8b6b7183b03defd85e14")


