; Auto-generated. Do not edit!


(cl:in-package hri_actions_msgs-msg)


;//! \htmlinclude FaceOverlayAction.msg.html

(cl:defclass <FaceOverlayAction> (roslisp-msg-protocol:ros-message)
  ((action_goal
    :reader action_goal
    :initarg :action_goal
    :type hri_actions_msgs-msg:FaceOverlayActionGoal
    :initform (cl:make-instance 'hri_actions_msgs-msg:FaceOverlayActionGoal))
   (action_result
    :reader action_result
    :initarg :action_result
    :type hri_actions_msgs-msg:FaceOverlayActionResult
    :initform (cl:make-instance 'hri_actions_msgs-msg:FaceOverlayActionResult))
   (action_feedback
    :reader action_feedback
    :initarg :action_feedback
    :type hri_actions_msgs-msg:FaceOverlayActionFeedback
    :initform (cl:make-instance 'hri_actions_msgs-msg:FaceOverlayActionFeedback)))
)

(cl:defclass FaceOverlayAction (<FaceOverlayAction>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <FaceOverlayAction>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'FaceOverlayAction)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name hri_actions_msgs-msg:<FaceOverlayAction> is deprecated: use hri_actions_msgs-msg:FaceOverlayAction instead.")))

(cl:ensure-generic-function 'action_goal-val :lambda-list '(m))
(cl:defmethod action_goal-val ((m <FaceOverlayAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:action_goal-val is deprecated.  Use hri_actions_msgs-msg:action_goal instead.")
  (action_goal m))

(cl:ensure-generic-function 'action_result-val :lambda-list '(m))
(cl:defmethod action_result-val ((m <FaceOverlayAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:action_result-val is deprecated.  Use hri_actions_msgs-msg:action_result instead.")
  (action_result m))

(cl:ensure-generic-function 'action_feedback-val :lambda-list '(m))
(cl:defmethod action_feedback-val ((m <FaceOverlayAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:action_feedback-val is deprecated.  Use hri_actions_msgs-msg:action_feedback instead.")
  (action_feedback m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <FaceOverlayAction>) ostream)
  "Serializes a message object of type '<FaceOverlayAction>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_goal) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_result) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_feedback) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <FaceOverlayAction>) istream)
  "Deserializes a message object of type '<FaceOverlayAction>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_goal) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_result) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_feedback) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<FaceOverlayAction>)))
  "Returns string type for a message object of type '<FaceOverlayAction>"
  "hri_actions_msgs/FaceOverlayAction")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'FaceOverlayAction)))
  "Returns string type for a message object of type 'FaceOverlayAction"
  "hri_actions_msgs/FaceOverlayAction")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<FaceOverlayAction>)))
  "Returns md5sum for a message object of type '<FaceOverlayAction>"
  "8f61684e206363bfd1066b6cbc9de109")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'FaceOverlayAction)))
  "Returns md5sum for a message object of type 'FaceOverlayAction"
  "8f61684e206363bfd1066b6cbc9de109")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<FaceOverlayAction>)))
  "Returns full string definition for message of type '<FaceOverlayAction>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%FaceOverlayActionGoal action_goal~%FaceOverlayActionResult action_result~%FaceOverlayActionFeedback action_feedback~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FaceOverlayGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%# URL of the picture/animation to overlay on the face; currently only supports~%# absolute local path~%string media_url~%~%# duration, in seconds, of the overlay visibility~%# - if the duration is larger than the duration of the animation, the animation~%# will loop.~%# - a duration of 0 means 'forever'. In this case, the action *will never~%# complete* on its own. Cancelling the action will remove the overlay from the~%# face.~%float32 duration~%~%~%###############################################~%## LAYER~%~%# display the image in the background (the eye's iris/pupil will be drawn on~%# top of the overlay~%uint8 BACKGROUND=0~%# display the image on top of the eye (the eye's iris/pupil will be occluded by~%# the image, except where transparent)~%uint8 FOREGROUND=1~%~%# one of BACKGROUND or FOREGROUND~%uint8 layer~%~%###############################################~%## LAYOUT~%~%# extend the provided image to cover both eyes.~%# Note: this typically is the only sensible option for robot with a single face panel~%uint8 EXTEND=0~%# on robots with 2 panels (one per eye), copy the provided image onto each eye~%uint8 COPY=1~%#  on robots with 2 panels (one per eye), mirror the provided image onto each eyes (symmetry over the vertical axis)~%uint8 MIRROR=2~%# on robots with 2 panels (one per eye), only display the image on the left eye~%uint8 LEFT_EYE_ONLY=3~%# on robots with 2 panels (one per eye), only display the image on the right eye~%uint8 RIGHT_EYE_ONLY=4~%~%# one of the layout constant defined above~%uint8 layout~%~%~%# scale of the image: 1.0 (default) means full width of the face/eye (depending~%# on the chosen layout); 0.1 means 10% of the width.~%# Note that any value <= 0.0 is ignored (replaced by 1.0)~%float32 scale~%~%# position offset, expressed as a proportion of the face or eye's width/height. Values~%# in [-1.0, 1.0] range.~%#~%# (0.0, 0.0) means that the image is centered with the face/eye~%# (-1.0, 1.0) means that the image's center would be located in the top left~%# corner of the face/eye panel.~%float32 offset_x~%float32 offset_y~%~%###############################################~%## EFFECTS~%~%# if true, the overlay will fade in/fade out~%bool fade~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FaceOverlayResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FaceOverlayFeedback feedback~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'FaceOverlayAction)))
  "Returns full string definition for message of type 'FaceOverlayAction"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%FaceOverlayActionGoal action_goal~%FaceOverlayActionResult action_result~%FaceOverlayActionFeedback action_feedback~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FaceOverlayGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%# URL of the picture/animation to overlay on the face; currently only supports~%# absolute local path~%string media_url~%~%# duration, in seconds, of the overlay visibility~%# - if the duration is larger than the duration of the animation, the animation~%# will loop.~%# - a duration of 0 means 'forever'. In this case, the action *will never~%# complete* on its own. Cancelling the action will remove the overlay from the~%# face.~%float32 duration~%~%~%###############################################~%## LAYER~%~%# display the image in the background (the eye's iris/pupil will be drawn on~%# top of the overlay~%uint8 BACKGROUND=0~%# display the image on top of the eye (the eye's iris/pupil will be occluded by~%# the image, except where transparent)~%uint8 FOREGROUND=1~%~%# one of BACKGROUND or FOREGROUND~%uint8 layer~%~%###############################################~%## LAYOUT~%~%# extend the provided image to cover both eyes.~%# Note: this typically is the only sensible option for robot with a single face panel~%uint8 EXTEND=0~%# on robots with 2 panels (one per eye), copy the provided image onto each eye~%uint8 COPY=1~%#  on robots with 2 panels (one per eye), mirror the provided image onto each eyes (symmetry over the vertical axis)~%uint8 MIRROR=2~%# on robots with 2 panels (one per eye), only display the image on the left eye~%uint8 LEFT_EYE_ONLY=3~%# on robots with 2 panels (one per eye), only display the image on the right eye~%uint8 RIGHT_EYE_ONLY=4~%~%# one of the layout constant defined above~%uint8 layout~%~%~%# scale of the image: 1.0 (default) means full width of the face/eye (depending~%# on the chosen layout); 0.1 means 10% of the width.~%# Note that any value <= 0.0 is ignored (replaced by 1.0)~%float32 scale~%~%# position offset, expressed as a proportion of the face or eye's width/height. Values~%# in [-1.0, 1.0] range.~%#~%# (0.0, 0.0) means that the image is centered with the face/eye~%# (-1.0, 1.0) means that the image's center would be located in the top left~%# corner of the face/eye panel.~%float32 offset_x~%float32 offset_y~%~%###############################################~%## EFFECTS~%~%# if true, the overlay will fade in/fade out~%bool fade~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FaceOverlayResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FaceOverlayFeedback feedback~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <FaceOverlayAction>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_goal))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_result))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_feedback))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <FaceOverlayAction>))
  "Converts a ROS message object to a list"
  (cl:list 'FaceOverlayAction
    (cl:cons ':action_goal (action_goal msg))
    (cl:cons ':action_result (action_result msg))
    (cl:cons ':action_feedback (action_feedback msg))
))
