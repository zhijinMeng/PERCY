; Auto-generated. Do not edit!


(cl:in-package hri_actions_msgs-msg)


;//! \htmlinclude FaceOverlayActionGoal.msg.html

(cl:defclass <FaceOverlayActionGoal> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (goal_id
    :reader goal_id
    :initarg :goal_id
    :type actionlib_msgs-msg:GoalID
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalID))
   (goal
    :reader goal
    :initarg :goal
    :type hri_actions_msgs-msg:FaceOverlayGoal
    :initform (cl:make-instance 'hri_actions_msgs-msg:FaceOverlayGoal)))
)

(cl:defclass FaceOverlayActionGoal (<FaceOverlayActionGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <FaceOverlayActionGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'FaceOverlayActionGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name hri_actions_msgs-msg:<FaceOverlayActionGoal> is deprecated: use hri_actions_msgs-msg:FaceOverlayActionGoal instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <FaceOverlayActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:header-val is deprecated.  Use hri_actions_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'goal_id-val :lambda-list '(m))
(cl:defmethod goal_id-val ((m <FaceOverlayActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:goal_id-val is deprecated.  Use hri_actions_msgs-msg:goal_id instead.")
  (goal_id m))

(cl:ensure-generic-function 'goal-val :lambda-list '(m))
(cl:defmethod goal-val ((m <FaceOverlayActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader hri_actions_msgs-msg:goal-val is deprecated.  Use hri_actions_msgs-msg:goal instead.")
  (goal m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <FaceOverlayActionGoal>) ostream)
  "Serializes a message object of type '<FaceOverlayActionGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal_id) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <FaceOverlayActionGoal>) istream)
  "Deserializes a message object of type '<FaceOverlayActionGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal_id) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<FaceOverlayActionGoal>)))
  "Returns string type for a message object of type '<FaceOverlayActionGoal>"
  "hri_actions_msgs/FaceOverlayActionGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'FaceOverlayActionGoal)))
  "Returns string type for a message object of type 'FaceOverlayActionGoal"
  "hri_actions_msgs/FaceOverlayActionGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<FaceOverlayActionGoal>)))
  "Returns md5sum for a message object of type '<FaceOverlayActionGoal>"
  "78d0b7ac0365fccb3f0b83dca8858497")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'FaceOverlayActionGoal)))
  "Returns md5sum for a message object of type 'FaceOverlayActionGoal"
  "78d0b7ac0365fccb3f0b83dca8858497")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<FaceOverlayActionGoal>)))
  "Returns full string definition for message of type '<FaceOverlayActionGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FaceOverlayGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%# URL of the picture/animation to overlay on the face; currently only supports~%# absolute local path~%string media_url~%~%# duration, in seconds, of the overlay visibility~%# - if the duration is larger than the duration of the animation, the animation~%# will loop.~%# - a duration of 0 means 'forever'. In this case, the action *will never~%# complete* on its own. Cancelling the action will remove the overlay from the~%# face.~%float32 duration~%~%~%###############################################~%## LAYER~%~%# display the image in the background (the eye's iris/pupil will be drawn on~%# top of the overlay~%uint8 BACKGROUND=0~%# display the image on top of the eye (the eye's iris/pupil will be occluded by~%# the image, except where transparent)~%uint8 FOREGROUND=1~%~%# one of BACKGROUND or FOREGROUND~%uint8 layer~%~%###############################################~%## LAYOUT~%~%# extend the provided image to cover both eyes.~%# Note: this typically is the only sensible option for robot with a single face panel~%uint8 EXTEND=0~%# on robots with 2 panels (one per eye), copy the provided image onto each eye~%uint8 COPY=1~%#  on robots with 2 panels (one per eye), mirror the provided image onto each eyes (symmetry over the vertical axis)~%uint8 MIRROR=2~%# on robots with 2 panels (one per eye), only display the image on the left eye~%uint8 LEFT_EYE_ONLY=3~%# on robots with 2 panels (one per eye), only display the image on the right eye~%uint8 RIGHT_EYE_ONLY=4~%~%# one of the layout constant defined above~%uint8 layout~%~%~%# scale of the image: 1.0 (default) means full width of the face/eye (depending~%# on the chosen layout); 0.1 means 10% of the width.~%# Note that any value <= 0.0 is ignored (replaced by 1.0)~%float32 scale~%~%# position offset, expressed as a proportion of the face or eye's width/height. Values~%# in [-1.0, 1.0] range.~%#~%# (0.0, 0.0) means that the image is centered with the face/eye~%# (-1.0, 1.0) means that the image's center would be located in the top left~%# corner of the face/eye panel.~%float32 offset_x~%float32 offset_y~%~%###############################################~%## EFFECTS~%~%# if true, the overlay will fade in/fade out~%bool fade~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'FaceOverlayActionGoal)))
  "Returns full string definition for message of type 'FaceOverlayActionGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FaceOverlayGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: hri_actions_msgs/FaceOverlayGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%~%# URL of the picture/animation to overlay on the face; currently only supports~%# absolute local path~%string media_url~%~%# duration, in seconds, of the overlay visibility~%# - if the duration is larger than the duration of the animation, the animation~%# will loop.~%# - a duration of 0 means 'forever'. In this case, the action *will never~%# complete* on its own. Cancelling the action will remove the overlay from the~%# face.~%float32 duration~%~%~%###############################################~%## LAYER~%~%# display the image in the background (the eye's iris/pupil will be drawn on~%# top of the overlay~%uint8 BACKGROUND=0~%# display the image on top of the eye (the eye's iris/pupil will be occluded by~%# the image, except where transparent)~%uint8 FOREGROUND=1~%~%# one of BACKGROUND or FOREGROUND~%uint8 layer~%~%###############################################~%## LAYOUT~%~%# extend the provided image to cover both eyes.~%# Note: this typically is the only sensible option for robot with a single face panel~%uint8 EXTEND=0~%# on robots with 2 panels (one per eye), copy the provided image onto each eye~%uint8 COPY=1~%#  on robots with 2 panels (one per eye), mirror the provided image onto each eyes (symmetry over the vertical axis)~%uint8 MIRROR=2~%# on robots with 2 panels (one per eye), only display the image on the left eye~%uint8 LEFT_EYE_ONLY=3~%# on robots with 2 panels (one per eye), only display the image on the right eye~%uint8 RIGHT_EYE_ONLY=4~%~%# one of the layout constant defined above~%uint8 layout~%~%~%# scale of the image: 1.0 (default) means full width of the face/eye (depending~%# on the chosen layout); 0.1 means 10% of the width.~%# Note that any value <= 0.0 is ignored (replaced by 1.0)~%float32 scale~%~%# position offset, expressed as a proportion of the face or eye's width/height. Values~%# in [-1.0, 1.0] range.~%#~%# (0.0, 0.0) means that the image is centered with the face/eye~%# (-1.0, 1.0) means that the image's center would be located in the top left~%# corner of the face/eye panel.~%float32 offset_x~%float32 offset_y~%~%###############################################~%## EFFECTS~%~%# if true, the overlay will fade in/fade out~%bool fade~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <FaceOverlayActionGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal_id))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <FaceOverlayActionGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'FaceOverlayActionGoal
    (cl:cons ':header (header msg))
    (cl:cons ':goal_id (goal_id msg))
    (cl:cons ':goal (goal msg))
))
